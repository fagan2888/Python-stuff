#Load method is made, make an update method in View that notifies views of new inputs to when the database is edited and a clear method that clears a views information 
#Information generated by views thats not wanted

import inspect
class CtagsDatabase():
    def __init__(self, fl):
        self.fl = open(fl)
        self.dicts = []
        self.views = []

    def addview(self, view):
        view.clear()
        for record in dicts:
            view.update(record)
        self.views.append(view)

    def generate(self):
        for view in self.views:
            view.clear()

        for line in self.fl:
            line = line.strip()
            if line[0] == "!":
                continue
            else:
                words = line.split('\t')
                tag_name = words[0]
                file_name = words[1]
                search_pattern = words[2]
                dictionary = {"tag": tag_name, "file name": file_name, "search pattern": search_pattern}
                colon = words[3].find(':')
                kind_type = len(words[3])
                starter = 3

                if colon == -1 and kind_type == 1:
                    dictionary["kind"] = words[3]
                    starter = 4

                elif colon == -1 and kind_type > 1:
                    dictionary["KIND"] = words[3]
                    starter = 4

                for i in range(starter, len(words)):
                    colon = words[i].find(':')
                    field = words[i][:colon+1]
                    dictionary[field]= words[i][colon+1:]
                    self.dicts.append(dictionary)

                for view in self.views:
                    view.update(dictionary)

        for instance in self.views:
            self.methods = inspect.getmembers(instance, predicate=inspect.ismethod)
            print("\nAvailable methods")
            for x in self.methods:
                if x[0] != '__init__':
                    print(x[0])
        
        

